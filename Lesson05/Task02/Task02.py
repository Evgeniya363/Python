# Создайте программу для игры с конфетами человек против человека.
# Условие задачи: На столе лежит 2021 конфета. Играют два игрока делая ход друг после друга. 
# Первый ход определяется жеребьёвкой. За один ход можно забрать не более чем 28 конфет. 
# Все конфеты оппонента достаются сделавшему последний ход. 
# Сколько конфет нужно взять первому игроку, чтобы забрать все конфеты у своего конкурента?
#     a) Добавьте игру против бота
#     b) Подумайте как наделить бота ""интеллектом""

from random import randint 

# Функция, оценки исхода игры для текущего игрока и расчета рекомендуемого хода 
def calc_move(n, t):
    od = n%(t + 1)
    fv = (od > 0)
    if od == 0:
        od = randint(1, t)  
    return(fv, od)

# Функция задания исходных данных
def input_ranges(**kwargs):
    print(kwargs)
    if 'n' not in kwargs:
        kwargs[n] = input_number('    Введите число конфет: ', 1, 1000000)
    if 't' not in kwargs:
        kwargs[t] = input_number('    Введите число конфет: ', 1, n)
    return (kwargs['n'], kwargs['t'])

# Функция установки игрового режима
def input_settings():
    bot = bool(input_number('\nВВЕДИТЕ ПАРАМЕТРЫ ИГРЫ\n    Два игрока (0), игра с ботом(1): '))
    art_int = False
    if bot:
        art_int = bool(input_number('    Наделить его искусственным интеллектом? (1-да, 0-нет): '))
    hints = bool(input_number('    Использовать подсказки? (1-да, 0-нет): '))
    return (bot, art_int, hints)

# Функция ввода целого натурального числа из заданного диапозона
def input_number(inp_str, begin = 0, end = 1):
    resalt = -1
    while not(resalt in range(begin, end+1)):
        resalt = int(input(inp_str))
    return resalt

# Процедура основного цикла игры, выполняющая попеременную передачу хода между игроками 
# и выполняющая контроль за вводимыми данными и соблюдением условий окончания игры
def play_game(n, t):
    # 1-й игрок всегда пользователь, 2-й игрок - человек или бот
    gamer = bool(randint(0, 1)) # очередность ходов
    step = 1

    while n > 0:
        print(f'\nКонфет: {n}', end = '\t')
        victory, candy_num = calc_move(n, t)
        if hints:
            print( f"[ Прогноз: {['Поражение', 'Победа'][victory]} / Рекомендуемый ход: {candy_num}]") 

        print(f'\nХОД {step} - Очередь {gamer + 1} игрока')   
        inp_str = f'\tВведите количество конфет: '
        if gamer and bot:
            if not art_int:
                candy_num = randint(1, t)
            print(inp_str, candy_num)
        else:
            candy_num = input_number(inp_str, 1, t)

        n -= candy_num
        gamer = not gamer 
        step += 1   

    print(f'\nКОНЕЦ ИГРЫ! Выиграл {1 + (not gamer)} игрок\n')


# ----------------------------------------------------------------
# Инициализация параметров запуска игры, запуск игрового алгоритма 
# ----------------------------------------------------------------

n, t = input_ranges(n = 34, t = 28) # Кол-во конфет, возможное ко-во конфет за ход 

print((f'\nИГРА:\nНа столе лежат конфеты: {n} шт. Играют два игрока делая ход друг после друга.\n' 
    + f'Первый ход определяется жеребьёвкой. За один ход можно забрать не более чем {t} шт.\n' 
    + 'Все конфеты оппонента достаются сделавшему последний ход.'))

bot, art_int, hints = input_settings () # Параметры: бот, иск интеллект, подсказки

play_game(n, t)
